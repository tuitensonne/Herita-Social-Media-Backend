generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Gender {
  Male
  Female
  Other
}

model User {
  id              String   @id @default(uuid())
  email           String   @unique @db.VarChar(150)
  password        String   @db.VarChar(150)
  username        String   @db.VarChar(150)
  follower        Int      @default(0)
  following       Int      @default(0)
  number_of_posts Int      @default(0)
  date_of_birth   DateTime
  gender          Gender
  avatar_url      String?  @db.VarChar(255)
  bio             String?  @db.Text()

  Post Post[]
}

enum Post_Audience {
  Private
  Public
  Friends
}

model Post {
  id             String        @id @default(uuid())
  title          String
  content        String        @db.Text
  created_at     DateTime
  post_audience  Post_Audience
  like_counts    Int           @default(0)
  comment_counts Int           @default(0)
  thumbnail_url  String?

  userId   String
  user     User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  Media    Media[]
  Location Location[]
}

enum MediaType {
  Video
  Image
}

model Media {
  id        String    @id @default(uuid())
  image_url String
  type      MediaType

  postId String?
  post   Post?   @relation(fields: [postId], references: [id], onDelete: Cascade)

  contentSectionId String?
  contentSection   Content_section? @relation("ContentSectionToMedia", fields: [contentSectionId], references: [id], onDelete: SetNull)
}

model Location {
  id         String @id @default(uuid())
  latitude   Float
  longtitude Float
  name       String
  address    String

  postId String?
  post   Post?   @relation(fields: [postId], references: [id], onDelete: SetNull)
}

model Culture_content {
  id          String            @id @default(uuid())
  created_at  DateTime          @default(now())
  title       String            @db.VarChar(255)
  description String            @db.Text
  category    Culture_category
  Content     Content_section[]

  @@index([category], map: "Culture_content_category_idx")
}

model Content_section {
  id         String          @id @default(uuid())
  title      String          @db.VarChar(255)
  content    String          @db.Text
  updated_at DateTime
  culture_id String
  Culture    Culture_content @relation(fields: [culture_id], references: [id], onDelete: Cascade)

  Media Media[] @relation("ContentSectionToMedia") 

  @@index([culture_id], map: "Content_section_culture_id_fkey")
}

enum Culture_category {
  HistoricalSite
}
